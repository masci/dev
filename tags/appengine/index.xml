<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Appengine on /dev/ by Massimiliano Pippi</title>
    <link>https://dev.pippi.im/tags/appengine/</link>
    <description>Recent content in Appengine on /dev/ by Massimiliano Pippi</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 May 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dev.pippi.im/tags/appengine/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Uploading files to Google Cloud Storage with Django</title>
      <link>https://dev.pippi.im/writing/django-upload-on-google-cloud-storage/</link>
      <pubDate>Fri, 02 May 2014 00:00:00 +0000</pubDate>
      <guid>https://dev.pippi.im/writing/django-upload-on-google-cloud-storage/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;On of the features of &lt;a href=&#34;https://github.com/masci/django-appengine-toolkit&#34;&gt;Django Appengine Toolkit&lt;/a&gt; is simplifying&#xA;the work needed to configure Google Cloud Storage as a static files storage for Django applications running on&#xA;Google App Engine. Infact all you have to do is writing something like this in your settings.py module:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cad3f5;background-color:#24273a;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    APPENGINE_TOOLKIT &lt;span style=&#34;color:#91d7e3;font-weight:bold&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;APP_YAML&amp;#39;&lt;/span&gt;: os&lt;span style=&#34;color:#91d7e3;font-weight:bold&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#91d7e3;font-weight:bold&#34;&gt;.&lt;/span&gt;join(BASE_DIR, &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;app.yaml&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;BUCKET_NAME&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;media-uploads&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    DEFAULT_FILE_STORAGE &lt;span style=&#34;color:#91d7e3;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;appengine_toolkit.storage.GoogleCloudStorage&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    STATICFILE_STORAGE &lt;span style=&#34;color:#91d7e3;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6da95&#34;&gt;&amp;#39;appengine_toolkit.storage.GoogleCloudStorage&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;a-complete-example&#34;&gt;A complete example&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/masci/django_cloudstorage_example&#34;&gt;This repo&lt;/a&gt; contains a minimalistic Django project&#xA;implementing a file storage application that lets users upload, listing, retrieve and delete files. The project has just&#xA;one app implementing all the logic, defining the model and exposing the views. For detailed instructions on how to&#xA;setup a Django project on App Engine with &lt;code&gt;django-appengine-toolkit&lt;/code&gt; please check out&#xA;&lt;a href=&#34;http://dev.pippi.im/2014/02/10/create-a-blog-in-minutes-on-app-engine-with-django/&#34;&gt;this blog post&lt;/a&gt;.&#xA;Now let&amp;rsquo;s take a look at the code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a blog in minutes on App Engine with Django and Cloud Sql</title>
      <link>https://dev.pippi.im/writing/create-a-blog-in-minutes-on-app-engine-with-django/</link>
      <pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://dev.pippi.im/writing/create-a-blog-in-minutes-on-app-engine-with-django/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;Django was actively supported at an early stage of the Python runtime in App Engine SDK through the notable&#xA;&lt;a href=&#34;http://www.django-nonrel.org&#34;&gt;django-nonrel&lt;/a&gt; framework, a fork of the original project that adds support for NoSql databases.&#xA;But starting from the App Engine SDK 1.6.2, released more than two years ago, you can instead deploy Django&amp;rsquo;s official releases&#xA;and take advantages from the whole stack using Google Cloud Sql.&lt;/p&gt;&#xA;&lt;h2 id=&#34;case-study&#34;&gt;Case study&lt;/h2&gt;&#xA;&lt;p&gt;We&amp;rsquo;re going to setup a minimal project using &lt;a href=&#34;http://django-blog-zinnia.com/&#34;&gt;Zinnia&lt;/a&gt;, a blog engine built on top of Django and&#xA;a fairly complex web application that leverages several components of the framework, a good benchmark for showing how easy can&#xA;be deploying on App Engine.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
