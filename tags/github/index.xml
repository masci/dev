<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on /dev/ by Massimiliano Pippi</title>
    <link>https://dev.pippi.im/tags/github/</link>
    <description>Recent content in Github on /dev/ by Massimiliano Pippi</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dev.pippi.im/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Tooling at Scale: LlamaIndex’s Monorepo Overhaul</title>
      <link>https://dev.pippi.im/writing/python-tooling-at-scale/</link>
      <pubDate>Wed, 21 May 2025 00:00:00 +0000</pubDate>
      <guid>https://dev.pippi.im/writing/python-tooling-at-scale/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This blog post was hosted in the LlamaIndex Blog, you can&#xA;&lt;a href=&#34;https://www.llamaindex.ai/blog/python-tooling-at-scale-llamaindex-s-monorepo-overhaul&#34;&gt;read it here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;When we talk about LlamaIndex, we’re actually referring to an ecosystem consisting of more than 650 Python packages,&#xA;mostly Integrations and Packs. All these packages share a single GitHub repository, what engineers fondly call a&#xA;“monorepo”. In this article, we’re going to introduce LlamaDev, our new tool for managing monorepos at scale, and&#xA;explain the challenges we ran into with existing tooling to get us to this point.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino on GitHub Actions</title>
      <link>https://dev.pippi.im/writing/arduino-on-github-actions/</link>
      <pubDate>Thu, 14 Nov 2019 15:53:40 +0200</pubDate>
      <guid>https://dev.pippi.im/writing/arduino-on-github-actions/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This blog post was hosted in the Arduino Engineering Blog, you can&#xA;&lt;a href=&#34;https://blog.arduino.cc/2019/11/14/arduino-on-github-actions/&#34;&gt;read it here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; is the name of the SDLC&#xA;(Software Development Life Cycle) system introduced by GitHub about a year ago,&#xA;currently in public beta and now approaching the general availability status.&#xA;When you read SDLC, think about some sort of CI/CD system that’s generic enough&#xA;to let you define a sequence of operations not necessarily limited to build,&#xA;test, and deploy code: GitHub Actions can help you automate processes in code&#xA;reviews, issue triaging, and repository management.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make a stale bot, learn GitHub Actions</title>
      <link>https://dev.pippi.im/writing/stale-bot/</link>
      <pubDate>Sun, 22 Sep 2019 15:53:40 +0200</pubDate>
      <guid>https://dev.pippi.im/writing/stale-bot/</guid>
      <description>&lt;p&gt;A few months ago I had the chance to play with the first Beta of &lt;a href=&#34;https://help.github.com/en/articles/about-github-actions&#34;&gt;GitHub Actions&lt;/a&gt;&#xA;but for some reasons it didn&amp;rsquo;t click for me: the point-and-click interface, the&#xA;HCL syntax and the confusion in the market place put me back to my comfort zone,&#xA;in the good company of the usual CI/CD systems we all have been using for years now.&lt;/p&gt;&#xA;&lt;p&gt;Fast forward to a few weeks ago, when GitHub announced that Actions were finally&#xA;approaching general availability; a couple of days later, my personal GitHub&#xA;account was promptly enrolled in the Beta program. It was time to give it another&#xA;try, and this is the story of my second attempt at learning Actions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
